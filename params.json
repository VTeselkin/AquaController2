{"name":"Aquacontroller2","tagline":"","body":"\r\n    \r\n\r\nДокументация\r\n============\r\n![Screenshot_3.png](https://github.com/VTeselkin/AquaController2/blob/master/docs/Top.jpg?raw=false)\r\n\r\nОписание устройства\r\n=========================\r\nКонтроллер предназначен для автоматизированного управления электрооборудованием. Содержит восемь каналов для подключения нагрузок, до 6А на канал, которые могут управляться как в ручном режиме, так и в автоматическом режиме используя таймеры. А так же содержит до 10 шим каналов для управление внешними LED драйверами. Имеет гибкую систему настройки. Любой выход контроллера можно подключить к любому таймеру или температурному датчику. Также можно запрограммировать на один выход несколько таймеров.\r\n \r\n* * *\r\n * Часы. Индикация даты и времени.\r\n * Управление аквариумными нагрузками: 8 каналов.\r\n * Управление 10 ШИМ каналами \r\n * До 10 ежедневных программ таймера.\r\n * До 10 ежечасных программ таймера. С диапазоном длительности работы до 60 минут.\r\n * До 10 секундных разовых таймеров. С диапазоном длительности работы от 1 до 250 секунд.\r\n * Поддержка до 4 цифровых датчиков температуры на 3-х проводной шине.\r\n * Поддержка электродов рН и управление клапаном СО2. Точность измерения pH +/- 0,02.\r\n * Измерение температуры в пределах -25…+85 градусов. Точность измерения 0,5°C. Возможность управления нагрузкой (обогревателем/охладителем) на любом из 8 каналов выхода.\r\n * Аккумулятор для работы часов микроконтроллера. Сохранение хода часов.\r\n * Автоматическое сохранение в энергонезависимой памяти всех настроек при полном отключении питания и разряде аккумулятора.\r\n *  Связь со смартфоном на ОС Android по Wi-Fi. Дополнительное программное обеспечение для быстрого программирования таймеров, термостата, синхронизации времени.\r\n  * Удаленное управление устройством по средствам Wi-Fi в локальной сети (либо сети Internet при определенной настройка сетевого оборудования).\r\n * Самостоятельная синхронизация и корректировка даты и времени устройства при наличии доступа устройству в сеть Internet. Либо удаленная синхронизация через смартфон.\r\n * Функция слежения за отклонением показаний датчиков от среднего установленного значения со звуковым оповещением и индикацией аварийного датчика.\r\n* Функция слежения за отклонением показаний датчиков от среднего установленного значения со звуковым оповещением и индикацией аварийного датчика.\r\n* Временное отключение нагрузки на произвольном канале на 5-30 минут.\r\n* \r\nЭксплуатация устройства\r\n=========================\r\n\r\nУстройство питается от сети переменного тока 220V. Проводить любые манипуляции с подключением, отключением нагрузок или датчиков только с выключенным из сети устройством чтобы исключить возможность поражения электрическим током или выхода из строя устройства! Так как устройство используется для управления высоковольтными нагрузками, необходимо обеспечить безопасную установку устройства при которой будет невозможно попадание воды на устройство или внутрь него.\r\nКонтроллер оснащен часами реального времени, которые имеют свой собственный, внутренний элемент питания литиевая батарея CR2032 3.3V. При падении напряжения на батарее менее чем 2.5V контроллер не сможет сохранять время при отключении питания. Со временем может понадобится замена батареи.\r\n\r\nПротокол передачи данных \r\n=========================\r\n\r\nДля связи с устройством используется встроенный модуль связи по технологии WiFi. Для обмена данных используется порт **8888** и сетевой протокол передачи данных **UDP**. Для обменом информации между устройством и клиентом пользователя используется внутренний протокол устройства основанный на JSON:\r\nУстройство связи принимает команды трех типов: **GET**, **POST**, **INFO**:\r\nКоманды типа GET позволяют делать запрос на получения данных от устройства.\r\n**Синтаксис команд:** все команды отправляются только в строчном виде. В устройстве присутствует внутренний валидатор запросов, однако проверки на валидность параметров не предусмотрено, и вся валидация параметров должна происходить на стороне клиента, поэтому при разработке необходимо учитывать этот момент. Так как использование не валидных параметров может вызвать неоднозначную работу устройства.\r\n\r\n**Формат команд GET:**\r\n----------------------\r\n\r\n    {\r\n    \"status\":\"get\",\r\n    \"message\":\"device\"\r\n    }\r\n\r\n**status** - тип отправляемой команды: GET, POST, INFO\r\n\r\n**message** - команда устройству:\r\n\r\n*   dev - информация об устройстве.\r\n*   c_s - информация об состоянии каналов устройства\r\n*   td_s - информация о ежедневных таймерах устройства\r\n*   th_s - информация о ежечасных таймерах устройства\r\n*   ts_s - информация о секундных таймерах устройства\r\n*   te_s - информация о температурных настройках устройства\r\n*   t_sen - информация о температурных датчиках устройства\r\n\r\n**data** - дополнительный параметр для передачи параметров запроса, в запросе типа GET не используется.\r\n\r\nНа каждый запрос GET устройство шлет ответ в виде своего внутреннего JSON. Такие запросы и примеры таких ответов представлены ниже:\r\n\r\n### **Информация об устройстве:**\r\n\r\n*   **Запрос:**\r\n    \r\n        {\r\n        \t\"status\": \"get\",\r\n        \t\"message\": \"dev\"\r\n        }\r\n    \r\n\r\n*   **Ответ:**\r\n    \r\n        {\r\n            \"status\":\"success\",\r\n            \"message\":\"dev\",\r\n            \"data\":{\r\n                \"ver\":\"AQ_V2_ESP32\",\r\n                \"firm\":\"200.bin\",  \r\n                \"update\":0,\r\n                \"ip\":\"192.168.1.58\",\r\n                \"m_t\":10,\r\n                \"m_t_se\":4,\r\n                \"min_t\":1600,\r\n                \"max_t\":3500,\r\n                \"time\":\"00:55:03\"\r\n                }\r\n        }\r\n    \r\n\r\n*   _\"ver\": \"AQ\\_CH08W\" - версия устройства_\r\n*   _\"m\\_t\": 8 - максимальное количество таймеров (ежедневных, ежечасных, секундных)_\r\n*   _\"m\\_t\\_se\": 4 - максимально возможное количество подключенных температурных датчиков_\r\n*   _\"min\\_t\": 1600 - порог минимальной температуры_\r\n*   _\"max\\_t\": 3500 - порог максимальной температуры_\r\n\r\n### **Информация об состоянии каналов устройства:**\r\n\r\n*   **Запрос:**\r\n    \r\n        {\r\n        \t\"status\": \"get\",\r\n        \t\"message\": \"c_s\"\r\n        }\r\n    \r\n*   **Ответ:**\r\n    \r\n        {\r\n            \"status\": \"success\",\r\n            \"message\": \"c_s\",\r\n            \"data\": {\r\n                \"cl\": [2, 1, 1, 1, 1, 1, 1, 1],\r\n                \"c_t\": [2, 3, 3, 3, 3, 3, 3, 3]\r\n            }\r\n        }\r\n    \r\n*   _\"cl\": \\[2, 2, 1, 1, 1, 1, 1, 1\\] - состояние канала (1 - off, 2 - on, 3-daily, 4-hour, 5-sec, 6-temp)_\r\n*   _\"c\\_t\": \\[3, 2, 1, 1, 1, 1, 1, 1\\] - настройки канала (1 - off, 2 - on, 3 - auto)_\r\n\r\n### **Информация о ежедневных таймерах устройства:**\r\n\r\n*   **Запрос:**\r\n    \r\n        {\r\n        \t\"status\": \"get\",\r\n        \t\"message\": \"td_s\"\r\n        }\r\n    \r\n*   **Ответ:**\r\n    \r\n        {\r\n            \"status\": \"success\",\r\n            \"message\": \"td_s\",\r\n            \"data\": {\r\n                \"dt_h_s\": [0, 12, 12, 0, 0, 0, 0, 0, 0, 0],\r\n                \"dt_h_end\": [0, 20, 21, 0, 0, 0, 0, 0, 0, 0],\r\n                \"dt_m_s\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                \"dt_m_e\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                \"dt_s\": [0, 1, 1, 0, 0, 0, 0, 0, 0, 0],\r\n                \"dt_c\": [0, 1, 2, 0, 0, 0, 0, 0, 0, 0]\r\n            }\r\n        }\r\n    \r\n*   _\"dt\\_h\\_s\": \\[0, 0, 0, 0, 0, 0, 0, 0\\] - час включения таймера (0...23)_\r\n*   _\"dt\\_h\\_end\": \\[0, 0, 0, 0, 0, 0, 0, 0\\] - час выключения таймера (0...23)_\r\n*   _\"dt\\_m\\_s\": \\[0, 0, 0, 0, 0, 0, 0, 0\\] - минута включения таймера (0...59)_\r\n*   _\"dt\\_m\\_e\": \\[0, 0, 0, 0, 0, 0, 0, 0\\] - минута выключения таймера (0...59)_\r\n*   _\"dt\\_s\": \\[0, 0, 0, 0, 0, 0, 0, 0\\] - состояние таймера (0 - off, 1 - on)_\r\n*   _\"dt\\_c\": \\[0, 0, 0, 0, 0, 0, 0, 0\\] - канал управляемый таймером (0...max\\_canal)_\r\n\r\n### **Информация о ежечасных таймерах устройства:**\r\n\r\n*   **Запрос:**\r\n    \r\n        {\r\n        \t\"status\": \"get\",\r\n        \t\"message\": \"th_s\"\r\n        }\r\n    \r\n*   **Ответ:**\r\n    \r\n        {\r\n            \"status\": \"success\",\r\n            \"message\": \"th_s\",\r\n            \"data\": {\r\n                \"ht_m_st\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                \"ht_m_sp\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                \"ht_s\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                \"ht_c\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n            }\r\n        }\r\n    \r\n*   _\"ht\\_m\\_st\": \\[0, 0, 0, 0, 0, 0, 0, 0\\] - минута включения таймера (0...59)_\r\n*   _\"ht\\_m\\_sp\": \\[0, 0, 0, 0, 0, 0, 0, 0\\] - минута выключения таймера (0...59)_\r\n*   _\"ht\\_s\": \\[0, 0, 0, 0, 0, 0, 0, 0\\] - состояние таймера (0 - off, 1 - on)_\r\n*   _\"ht\\_c\": \\[0, 0, 0, 0, 0, 0, 0, 0\\] - канал управляемый таймером (0...max\\_canal)_\r\n\r\n### **Информация о секундных таймерах устройства:**\r\n\r\n*   **Запрос:**\r\n    \r\n        {\r\n        \t\"status\": \"get\",\r\n        \t\"message\": \"ts_s\"\r\n        }\r\n    \r\n*   **Ответ:**\r\n    \r\n        {\r\n            \"status\": \"success\",\r\n            \"message\": \"ts_s\",\r\n            \"data\": {\r\n                \"st_h_s\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                \"st_m_s\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                \"st_d\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                \"st_s\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                \"st_c\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n            }\r\n        }\r\n    \r\n*   _\"st\\_h\\_s: \\[0, 0, 0, 0, 0, 0, 0, 0\\] - час включения таймера (0...23)_\r\n*   _\"st\\_m\\_s\": \\[0, 0, 0, 0, 0, 0, 0, 0\\] - минута включения таймера (0...59)_\r\n*   _\"st\\_d\": \\[0, 0, 0, 0, 0, 0, 0, 0\\] - длительность работы таймера в секундах (0...255)_\r\n*   _\"st\\_s\": \\[0, 0, 0, 0, 0, 0, 0, 0\\] - состояние таймера (0 - off, 1 - on)_\r\n*   _\"st\\_c\": \\[0, 0, 0, 0, 0, 0, 0, 0\\] - канал управляемый таймером (0...max\\_canal)_\r\n\r\n### **Информация о температурных настройках устройства:**\r\n\r\n*   **Запрос:**\r\n*       {\r\n        \t\"status\": \"get\",\r\n        \t\"message\": \"te_s\"\r\n        }\r\n    \r\n*   **Ответ:**\r\n    \r\n*       {\r\n            \"status\": \"success\",\r\n            \"message\": \"te_s\",\r\n            \"data\": {\r\n                \"tt_s\": [0, 0, 0, 0],\r\n                \"tt_m_s\": [0, 0, 0, 0],\r\n                \"tt_m_e\": [76, 76, 76, 76],\r\n                \"tt_c\": [1, 0, 0, 0]\r\n            }\r\n        }\r\n    \r\n*   _\"tt\\_s\": \\[1, 0, 0, 0,\\] - состояние температурного таймера_\r\n*   _\"tt\\_m\\_s\": \\[0, 0, 0, 0\\] - температура включения канала (min\\_temp...max\\_temp, кратна 50)_\r\n*   _\"tt\\_m\\_e\": \\[76, 76, 0, 0\\] - температура выключения канала (min\\_temp...max\\_temp кратна 50)_\r\n*   _\"tt\\_c\": \\[1, 0, 0, 0\\] - канала управляемый таймером (0...max\\_canal)_\r\n\r\n### **Информация о температурных датчиках устройства:**\r\n\r\n*   **Запрос:**\r\n*       {\r\n        \t\"status\": \"get\",\r\n        \t\"message\": \"t_se\"\r\n        }\r\n    \r\n    **Ответ:**\r\n    \r\n        {\r\n            \"status\": \"success\",\r\n            \"message\": \"t_sen\",\r\n            \"data\": {\r\n                \"t_se\": [4, 3, 0, 0]\r\n            }\r\n        }\r\n    \r\n*   _\"t\\_se\": \\[4, 3, 0, 0\\] - температура датчиков (min\\_temp...max\\_temp)_\r\n\r\n**Формат команд POST**\r\n----------------------\r\n\r\nКоманды POST отличаются от команд GET только тем что в запросе необходимо в поле **data** указывать параметры запроса и поле **status** содержит параметр **post**. Формат данных для поля **data** аналогичен данным приходящим от устройства при запросе командой GET.\r\n\r\n**Примеры возможных запросов:**\r\n\r\n### **Изменение состояния каналов устройства:**\r\n\r\n*   **Запрос:**\r\n\r\n    {\r\n    \t\"status\": \"post\",\r\n    \t\"message\": \"c_s\",\r\n    \t\"data\": {\r\n    \t\t\"c_t\": [1, 0, 0, 0, 0, 0, 0, 0]\r\n    \t}\r\n    }\r\n\r\nОбратите внимание для изменения настроек каналов, отправлять нужно только параметр **c\\_t**, параметр **cl** не предназначен для изменения, он отвечает только за текущее состояние канала в зависимости от настроек таймеров или ручных настроек.\r\n\r\n### **Изменение ежедневных таймеров устройства:**\r\n\r\n*   **Запрос:**\r\n\r\n    {\r\n    \t\"status\": \"post\",\r\n    \t\"message\": \"td_s\",\r\n    \t\"data\": {\r\n    \t\t\"dt_h_s\": [1, 0, 0, 0, 0, 0, 0, 0],\r\n    \t\t\"dt_h_end\": [2, 0, 0, 0, 0, 0, 0, 0],\r\n    \t\t\"dt_m_s\": [5, 0, 0, 0, 0, 0, 0, 0],\r\n    \t\t\"dt_m_e\": [55, 0, 0, 0, 0, 0, 0, 0],\r\n    \t\t\"dt_s\": [1, 0, 0, 0, 0, 0, 0, 0],\r\n    \t\t\"dt_c\": [3, 0, 0, 0, 0, 0, 0, 0]\r\n    \t}\r\n    }\r\n\r\n### **Изменение ежечасных таймеров устройства:**\r\n\r\n*   **Запрос:**\r\n\r\n    {\r\n    \t\"status\": \"post\",\r\n    \t\"message\": \"th_s\",\r\n    \t\"data\": {\r\n    \t\t\"ht_m_st\": [45, 0, 0, 0, 0, 0, 0, 0],\r\n    \t\t\"ht_m_sp\": [56, 0, 0, 0, 0, 0, 0, 0],\r\n    \t\t\"ht_s\": [1, 0, 0, 0, 0, 0, 0, 0],\r\n    \t\t\"ht_c\": [3, 0, 0, 0, 0, 0, 0, 0]\r\n    \t}\r\n    }\r\n\r\n### **Изменение секундных таймеров устройства:**\r\n\r\n*   **Запрос:**\r\n\r\n    {\r\n    \t\"status\": \"post\",\r\n    \t\"message\": \"ts_s\",\r\n    \t\"data\": {\r\n    \t\t\"st_h_s\": [5, 0, 0, 0, 0, 0, 0, 0],\r\n    \t\t\"st_m_s\": [26, 0, 0, 0, 0, 0, 0, 0],\r\n    \t\t\"st_d\": [125, 0, 0, 0, 0, 0, 0, 0],\r\n    \t\t\"st_s\": [1, 0, 0, 0, 0, 0, 0, 0],\r\n    \t\t\"st_c\": [2, 0, 0, 0, 0, 0, 0, 0]\r\n    \t}\r\n    }\r\n\r\n### **Изменение температурных настроек устройства:**\r\n\r\n*   **Запрос:**\r\n\r\n    {\r\n    \t\"status\": \"post\",\r\n    \t\"message\": \"te_s\",\r\n    \t\"data\": {\r\n    \t\t\"tt_s\": [0, 0, 0, 0, 0, 0, 0, 0],\r\n    \t\t\"tt_m_s\": [2200, 2250, 0, 0, 0, 0, 0, 0],\r\n    \t\t\"tt_m_e\": [2700, 2850, 0, 0, 0, 0, 0, 0],\r\n    \t\t\"tt_c\": [5, 0, 0, 0, 0, 0, 0, 0]\r\n    \t}\r\n    }\r\n\r\nПри POST запросе нет необходимости указывать все параметры в поле **data**. При передаче значений в устройство можно отправлять только те данные которые изменились на клиенте. На каждый выполненный **POST** запрос, ответом будет ответ аналогичный **GET** с тем же **message** параметром, но уже с измененными данными.\r\n\r\n### **Пример:**\r\n\r\n*   **Запрос**\r\n*       {\r\n        \t\"status\": \"post\",\r\n        \t\"message\": \"c_s\",\r\n        \t\"data\": {\r\n        \t\t\"c_t\": [1, 1, 1, 2, 3, 2, 2, 2]\r\n        \t}\r\n        }\r\n    \r\n*   **Ответ**\r\n    \r\n*       {\r\n        \t\"status\": \"get\",\r\n        \t\"message\": \"c_s\",\r\n        \t\"data\": {\r\n        \t\t\"cl\": [1, 1, 1, 2, 1, 2, 2, 2],\r\n        \t\t\"c_t\": [1, 1, 1, 2, 3, 2, 2, 2]\r\n        \t}\r\n        }\r\n    \r\n*   Обратите внимание что ответ на POST приходит всегда в полном виде независимо от тех параметров которые вы отправляете.\r\n    \r\n\r\n**Формат команд INFO:**\r\n-----------------------\r\n\r\nВ данный момент запросы формата INFO используются только для внутренней передачи данных между Arduino и модулем связи ESP8266. В частности используется ESP8266 для передачи своего состояния и логирования процессов. Использование внешними клиентами в данной версии не предусмотрено.\r\n\r\n### **Пример отправки логов WIFI соединения на устройство:**\r\n\r\n    {\r\n    \t\"status\": \"info\",\r\n    \t\"message\": \"wifi_log\",\r\n    \t\"log\": \"\"\r\n    } \r\n\r\n","note":"Don't delete this file! It's used internally to help with page regeneration."}